name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  BINARY_NAME: go_project_context_maker

jobs:
  build:
    name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          check-latest: true

      - name: Build and package
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist "build/${{ matrix.goos }}-${{ matrix.goarch }}"

          export CGO_ENABLED=0
          export GOOS="${{ matrix.goos }}"
          export GOARCH="${{ matrix.goarch }}"

          EXT=""
          if [ "${GOOS}" = "windows" ]; then EXT=".exe"; fi

          BIN="${BINARY_NAME}${EXT}"
          OUTDIR="build/${GOOS}-${GOARCH}"

          echo "Building ${BIN} for ${GOOS}/${GOARCH}..."
          go build -trimpath -ldflags "-s -w" -o "${OUTDIR}/${BIN}" ./...

          VERSION="${GITHUB_REF_NAME}"
          if [ "${GOOS}" = "windows" ]; then
            ARCHIVE="dist/${BINARY_NAME}_${VERSION}_${GOOS}_${GOARCH}.zip"
            (cd "${OUTDIR}" && zip -9 "${PWD}/${ARCHIVE}" "${BIN}")
          else
            ARCHIVE="dist/${BINARY_NAME}_${VERSION}_${GOOS}_${GOARCH}.tar.gz"
            tar -C "${OUTDIR}" -czf "${ARCHIVE}" "${BIN}"
          fi

          (cd dist && sha256sum "$(basename "${ARCHIVE}")" > "$(basename "${ARCHIVE}").sha256")

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*
          if-no-files-found: error
          retention-days: 7

  release:
    name: Publish release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts-*
          merge-multiple: true
          path: dist

      - name: Generate combined checksums file
        shell: bash
        run: |
          set -euo pipefail
          cd dist
          # Recompute combined list for convenience (keep per-file .sha256 too)
          shopt -s nullglob
          files=( *.tar.gz *.zip )
          if [ ${#files[@]} -gt 0 ]; then
            sha256sum "${files[@]}" > checksums.txt
          else
            echo "No archives found to checksum."
          fi

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
          draft: false
          prerelease: false